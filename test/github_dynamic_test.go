package yac

import (
	"net/http"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

var githubDynamic = []route{
	// OAuth Authorizations
	{method: "GET", pattern: "/authorizations/{int:id}",
		path: "/authorizations/123"},
	{method: "PATCH", pattern: "/authorizations/{int:id}",
		path: "/authorizations/123"},
	{method: "DELETE", pattern: "/authorizations/{int:id}",
		path: "/authorizations/123"},

	{method: "PUT", pattern: "/authorizations/clients/{int:client_id}",
		path: "/authorizations/clients/123"},

	{method: "DELETE", pattern: "/applications/{int:client_id}/tokens",
		path: "/applications/123/tokens"},

	{method: "GET", pattern: "/applications/{int:client_id}/tokens/{str:access_token}",
		path: "/applications/123/tokens/test"},

	{method: "DELETE", pattern: "/applications/{int:client_id}/tokens/{str:access_token}",
		path: "/applications/123/tokens/test"},

	// Activity
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/events",
		path: "/repos/test/test/events"},
	{method: "GET", pattern: "/networks/{str:owner}/{str:repo}/events",
		path: "/networks/test/test/events"},
	{method: "GET", pattern: "/orgs/{str:org}/events",
		path: "/orgs/test/events"},
	{method: "GET", pattern: "/users/{str:user}/received_events",
		path: "/users/test/received_events"},
	{method: "GET", pattern: "/users/{str:user}/received_events/public",
		path: "/users/test/received_events/public"},
	{method: "GET", pattern: "/users/{str:user}/events",
		path: "/users/test/events"},
	{method: "GET", pattern: "/users/{str:user}/events/public",
		path: "/users/test/events/public"},
	{method: "GET", pattern: "/users/{str:user}/events/orgs/{str:org}",
		path: "/users/test/events/orgs/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/notifications",
		path: "/repos/test/test/notifications"},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:repo}/notifications",
		path: "/repos/test/test/notifications"},
	{method: "GET", pattern: "/notifications/threads/{int:id}",
		path: "/notifications/threads/123"},
	{method: "PATCH", pattern: "/notifications/threads/{int:id}",
		path: "/notifications/threads/123"},
	{method: "GET", pattern: "/notifications/threads/{int:id}/subscription",
		path: "/notifications/threads/123/subscription"},
	{method: "PUT", pattern: "/notifications/threads/{int:id}/subscription",
		path: "/notifications/threads/123/subscription"},
	{method: "DELETE", pattern: "/notifications/threads/{int:id}/subscription",
		path: "/notifications/threads/123/subscription"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/stargazers",
		path: "/repos/test/test/stargazers"},
	{method: "GET", pattern: "/users/{str:user}/starred",
		path: "/users/test/starred"},
	{method: "GET", pattern: "/user/starred/{str:owner}/{str:repo}",
		path: "/user/starred/test/test"},
	{method: "PUT", pattern: "/user/starred/{str:owner}/{str:repo}",
		path: "/user/starred/test/test"},
	{method: "DELETE", pattern: "/user/starred/{str:owner}/{str:repo}",
		path: "/user/starred/test/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/subscribers",
		path: "/repos/test/test/subscribers"},
	{method: "GET", pattern: "/users/{str:user}/subscriptions",
		path: "/users/test/subscriptions"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/subscription",
		path: "/repos/test/test/subscription"},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:repo}/subscription",
		path: "/repos/test/test/subscription"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/subscription",
		path: "/repos/test/test/subscription"},
	{method: "GET", pattern: "/user/subscriptions/{str:owner}/{str:repo}",
		path: "/user/subscriptions/test/test"},
	{method: "PUT", pattern: "/user/subscriptions/{str:owner}/{str:repo}",
		path: "/user/subscriptions/test/test"},
	{method: "DELETE", pattern: "/user/subscriptions/{str:owner}/{str:repo}",
		path: "/user/subscriptions/test/test"},

	// Gists
	{method: "GET", pattern: "/users/{str:user}/gists",
		path: "/users/test/gists"},
	{method: "GET", pattern: "/gists/{int:id}",
		path: "/gists/123"},
	{method: "PATCH", pattern: "/gists/{int:id}",
		path: "/gists/123"},
	{method: "PUT", pattern: "/gists/{int:id}/star",
		path: "/gists/123/star"},
	{method: "DELETE", pattern: "/gists/{int:id}/star",
		path: "/gists/123/star"},
	{method: "GET", pattern: "/gists/{int:id}/star",
		path: "/gists/123/star"},
	{method: "POST", pattern: "/gists/{int:id}/forks",
		path: "/gists/123/forks"},
	{method: "DELETE", pattern: "/gists/{int:id}",
		path: "/gists/123"},

	// Git Data
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/git/blobs/{hex:sha}",
		path: "/repos/test/test/git/blobs/dead12beef"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/git/blobs",
		path: "/repos/test/test/git/blobs"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/git/commits/{hex:sha}",
		path: "/repos/test/test/git/commits/dead12beef"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/git/commits",
		path: "/repos/test/test/git/commits"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/git/refs/{str:ref}",
		path: "/repos/test/test/git/refs/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/git/refs",
		path: "/repos/test/test/git/refs"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/git/refs",
		path: "/repos/test/test/git/refs"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/git/refs/{str:ref}",
		path: "/repos/test/test/git/refs/test"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/git/refs/{str:ref}",
		path: "/repos/test/test/git/refs/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/git/tags/{hex:sha}",
		path: "/repos/test/test/git/tags/dead12beef"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/git/tags",
		path: "/repos/test/test/git/tags"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/git/trees/{hex:sha}",
		path: "/repos/test/test/git/trees/dead12beef"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/git/trees",
		path: "/repos/test/test/git/trees"},

	// Issues
	{method: "GET", pattern: "/orgs/{str:org}/issues",
		path: "/orgs/test/issues"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/issues",
		path: "/repos/test/test/issues"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/issues/{str:user}",
		path: "/repos/test/test/issues/test"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/issues",
		path: "/repos/test/test/issues"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/issues/{str:user}",
		path: "/repos/test/test/issues/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/assignees",
		path: "/repos/test/test/assignees"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/assignees/{str:assignee}",
		path: "/repos/test/test/assignees/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/issues/{str:user}/comments",
		path: "/repos/test/test/issues/test/comments"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/issues/comments",
		path: "/repos/test/test/issues/comments"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/issues/comments/{int:id}",
		path: "/repos/test/test/issues/comments/123"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/issues/{str:user}/comments",
		path: "/repos/test/test/issues/test/comments"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/issues/comments/{int:id}",
		path: "/repos/test/test/issues/comments/123"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/issues/comments/{int:id}",
		path: "/repos/test/test/issues/comments/123"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/issues/{str:user}/events",
		path: "/repos/test/test/issues/test/events"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/issues/events",
		path: "/repos/test/test/issues/events"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/issues/events/{int:id}",
		path: "/repos/test/test/issues/events/123"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/labels",
		path: "/repos/test/test/labels"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/labels/{str:name}",
		path: "/repos/test/test/labels/test"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/labels",
		path: "/repos/test/test/labels"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/labels/{str:name}",
		path: "/repos/test/test/labels/test"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/labels/{str:name}",
		path: "/repos/test/test/labels/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/issues/{str:user}/labels",
		path: "/repos/test/test/issues/test/labels"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/issues/{str:user}/labels",
		path: "/repos/test/test/issues/test/labels"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/issues/{str:user}/labels/{str:name}",
		path: "/repos/test/test/issues/test/labels/test"},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:owner}/issues/{str:user}/labels",
		path: "/repos/test/test/issues/test/labels"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/issues/{str:user}/labels",
		path: "/repos/test/test/issues/test/labels"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/milestones/{str:user}/labels",
		path: "/repos/test/test/milestones/test/labels"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/milestones",
		path: "/repos/test/test/milestones"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/milestones/{str:user}",
		path: "/repos/test/test/milestones/test"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/milestones",
		path: "/repos/test/test/milestones"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/milestones/{str:user}",
		path: "/repos/test/test/milestones/test"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/milestones/{str:user}",
		path: "/repos/test/test/milestones/test"},

	// Miscellaneous
	{method: "GET", pattern: "/gitignore/templates/{str:name}",
		path: "/gitignore/templates/test"},

	// Organizations
	{method: "GET", pattern: "/users/{str:user}/orgs",
		path: "/users/test/orgs"},
	{method: "GET", pattern: "/orgs/{str:org}",
		path: "/orgs/test"},
	{method: "PATCH", pattern: "/orgs/{str:org}",
		path: "/orgs/test"},
	{method: "GET", pattern: "/orgs/{str:org}/members",
		path: "/orgs/test/members"},
	{method: "GET", pattern: "/orgs/{str:org}/members/{str:user}",
		path: "/orgs/test/members/test"},
	{method: "DELETE", pattern: "/orgs/{str:org}/members/{str:user}",
		path: "/orgs/test/members/test"},
	{method: "GET", pattern: "/orgs/{str:org}/public_members",
		path: "/orgs/test/public_members"},
	{method: "GET", pattern: "/orgs/{str:org}/public_members/{str:user}",
		path: "/orgs/test/public_members/test"},
	{method: "PUT", pattern: "/orgs/{str:org}/public_members/{str:user}",
		path: "/orgs/test/public_members/test"},
	{method: "DELETE", pattern: "/orgs/{str:org}/public_members/{str:user}",
		path: "/orgs/test/public_members/test"},
	{method: "GET", pattern: "/orgs/{str:org}/teams",
		path: "/orgs/test/teams"},
	{method: "GET", pattern: "/teams/{int:id}",
		path: "/teams/123"},
	{method: "POST", pattern: "/orgs/{str:org}/teams",
		path: "/orgs/test/teams"},
	{method: "PATCH", pattern: "/teams/{int:id}",
		path: "/teams/123"},
	{method: "DELETE", pattern: "/teams/{int:id}",
		path: "/teams/123"},
	{method: "GET", pattern: "/teams/{int:id}/members",
		path: "/teams/123/members"},
	{method: "GET", pattern: "/teams/{int:id}/members/{str:user}",
		path: "/teams/123/members/test"},
	{method: "PUT", pattern: "/teams/{int:id}/members/{str:user}",
		path: "/teams/123/members/test"},
	{method: "DELETE", pattern: "/teams/{int:id}/members/{str:user}",
		path: "/teams/123/members/test"},
	{method: "GET", pattern: "/teams/{int:id}/repos",
		path: "/teams/123/repos"},
	{method: "GET", pattern: "/teams/{int:id}/repos/{str:owner}/{str:repo}",
		path: "/teams/123/repos/test/test"},
	{method: "PUT", pattern: "/teams/{int:id}/repos/{str:owner}/{str:repo}",
		path: "/teams/123/repos/test/test"},
	{method: "DELETE", pattern: "/teams/{int:id}/repos/{str:owner}/{str:repo}",
		path: "/teams/123/repos/test/test"},

	// Pull Requests
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/pulls",
		path: "/repos/test/test/pulls"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/pulls/{str:user}",
		path: "/repos/test/test/pulls/test"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/pulls",
		path: "/repos/test/test/pulls"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/pulls/{str:user}",
		path: "/repos/test/test/pulls/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/pulls/{str:user}/commits",
		path: "/repos/test/test/pulls/test/commits"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/pulls/{str:user}/files",
		path: "/repos/test/test/pulls/test/files"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/pulls/{str:user}/merge",
		path: "/repos/test/test/pulls/test/merge"},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:owner}/pulls/{str:user}/merge",
		path: "/repos/test/test/pulls/test/merge"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/pulls/{str:user}/comments",
		path: "/repos/test/test/pulls/test/comments"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/pulls/comments",
		path: "/repos/test/test/pulls/comments"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/pulls/comments/{str:user}",
		path: "/repos/test/test/pulls/comments/test"},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:owner}/pulls/{str:user}/comments",
		path: "/repos/test/test/pulls/test/comments"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/pulls/comments/{str:user}",
		path: "/repos/test/test/pulls/comments/test"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/pulls/comments/{str:user}",
		path: "/repos/test/test/pulls/comments/test"},

	// Repositories
	{method: "GET", pattern: "/users/{str:user}/repos",
		path: "/users/test/repos"},
	{method: "GET", pattern: "/orgs/{str:org}/repos",
		path: "/orgs/test/repos"},
	{method: "POST", pattern: "/orgs/{str:org}/repos",
		path: "/orgs/test/repos"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}",
		path: "/repos/test/test"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}",
		path: "/repos/test/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/contributors",
		path: "/repos/test/test/contributors"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/languages",
		path: "/repos/test/test/languages"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/teams",
		path: "/repos/test/test/teams"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/tags",
		path: "/repos/test/test/tags"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/branches",
		path: "/repos/test/test/branches"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/branches/{str:branch}",
		path: "/repos/test/test/branches/test"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}",
		path: "/repos/test/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/collaborators",
		path: "/repos/test/test/collaborators"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/collaborators/{str:user}",
		path: "/repos/test/test/collaborators/test"},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:owner}/collaborators/{str:user}",
		path: "/repos/test/test/collaborators/test"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/collaborators/{str:user}",
		path: "/repos/test/test/collaborators/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/comments",
		path: "/repos/test/test/comments"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/commits/{hex:sha}/comments",
		path: "/repos/test/test/commits/dead12beef/comments"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/commits/{hex:sha}/comments",
		path: "/repos/test/test/commits/dead12beef/comments"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/comments/{int:id}",
		path: "/repos/test/test/comments/123"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/comments/{int:id}",
		path: "/repos/test/test/comments/123"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/comments/{int:id}",
		path: "/repos/test/test/comments/123"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/commits",
		path: "/repos/test/test/commits"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/commits/{hex:sha}",
		path: "/repos/test/test/commits/dead12beef"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/readme",
		path: "/repos/test/test/readme"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/contents/{str:path}",
		path: "/repos/test/test/contents/pasdasd"},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:owner}/contents/{str:path}",
		path: "/repos/test/test/contents/pathdas"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/contents/{str:path}",
		path: "/repos/test/test/contents/pathsda"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/{str:archive_format}/{str:ref}",
		path: "/repos/test/test/test/test"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/keys",
		path: "/repos/test/test/keys"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/keys/{int:id}",
		path: "/repos/test/test/keys/123"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/keys",
		path: "/repos/test/test/keys"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/keys/{int:id}",
		path: "/repos/test/test/keys/123"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/keys/{int:id}",
		path: "/repos/test/test/keys/123"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/downloads",
		path: "/repos/test/test/downloads"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/downloads/{int:id}",
		path: "/repos/test/test/downloads/123"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/downloads/{int:id}",
		path: "/repos/test/test/downloads/123"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/forks",
		path: "/repos/test/test/forks"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/forks",
		path: "/repos/test/test/forks"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/hooks",
		path: "/repos/test/test/hooks"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/hooks/{int:id}",
		path: "/repos/test/test/hooks/123"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/hooks",
		path: "/repos/test/test/hooks"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/hooks/{int:id}",
		path: "/repos/test/test/hooks/123"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/hooks/{int:id}/tests",
		path: "/repos/test/test/hooks/123/tests"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/hooks/{int:id}",
		path: "/repos/test/test/hooks/123"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/merges",
		path: "/repos/test/test/merges"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/releases",
		path: "/repos/test/test/releases"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/releases/{int:id}",
		path: "/repos/test/test/releases/123"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/releases",
		path: "/repos/test/test/releases"},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:owner}/releases/{int:id}",
		path: "/repos/test/test/releases/123"},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:owner}/releases/{int:id}",
		path: "/repos/test/test/releases/123"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/releases/{int:id}/assets",
		path: "/repos/test/test/releases/123/assets"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/stats/contributors",
		path: "/repos/test/test/stats/contributors"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/stats/commit_activity",
		path: "/repos/test/test/stats/commit_activity"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/stats/code_frequency",
		path: "/repos/test/test/stats/code_frequency"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/stats/participation",
		path: "/repos/test/test/stats/participation"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/stats/punch_card",
		path: "/repos/test/test/stats/punch_card"},
	{method: "GET", pattern: "/repos/{str:owner}/{str:owner}/statuses/{str:ref}",
		path: "/repos/test/test/statuses/test"},
	{method: "POST", pattern: "/repos/{str:owner}/{str:owner}/statuses/{str:ref}",
		path: "/repos/test/test/statuses/test"},

	// Search
	{method: "GET", pattern: "/legacy/issues/search/{str:owner}/{str:repo}sitory/{str:state}/{str:keyword}",
		path: "/legacy/issues/search/test/testsitory/test/test"},
	{method: "GET", pattern: "/legacy/repos/search/{str:keyword}",
		path: "/legacy/repos/search/test"},
	{method: "GET", pattern: "/legacy/user/search/{str:keyword}",
		path: "/legacy/user/search/test"},
	{method: "GET", pattern: "/legacy/user/email/{str:email}",
		path: "/legacy/user/email/test"},

	// Users
	{method: "GET", pattern: "/users/{str:user}",
		path: "/users/test"},
	{method: "GET", pattern: "/users/{str:user}/followers",
		path: "/users/test/followers"},
	{method: "GET", pattern: "/users/{str:user}/following",
		path: "/users/test/following"},
	{method: "GET", pattern: "/user/following/{str:user}",
		path: "/user/following/test"},
	{method: "GET", pattern: "/users/{str:user}/following/{str:target_user}",
		path: "/users/test/following/test"},
	{method: "PUT", pattern: "/user/following/{str:user}",
		path: "/user/following/test"},
	{method: "DELETE", pattern: "/user/following/{str:user}",
		path: "/user/following/test"},
	{method: "GET", pattern: "/users/{str:user}/keys",
		path: "/users/test/keys"},
	{method: "GET", pattern: "/user/keys/{int:id}",
		path: "/user/keys/123"},
	{method: "PATCH", pattern: "/user/keys/{int:id}",
		path: "/user/keys/123"},
	{method: "DELETE", pattern: "/user/keys/{int:id}",
		path: "/user/keys/123"},
}

// Tests that all dynamic API routes resolves correctly
func TestGitHubDynamic(t *testing.T) {
	router, err := createRouter(githubDynamic, emptyHandler)
	require.Nil(t, err, "can not create router: %v", err)

	req, w := createRequestResponse()

	for _, route := range githubDynamic {
		resetRequestResponse(req, w, route.method, route.path)
		router.ServeHTTP(w, req)
		assert.Equal(t, http.StatusOK, w.Code, "can not resolve route %+v", route)
	}
}

// Bench for dynamic API resolving
func BenchmarkGithubDynamic(b *testing.B) {
	router, err := createRouter(githubDynamic, emptyHandler)
	require.Nil(b, err, "can not create router: %v", err)

	req, w := createRequestResponse()

	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		for _, route := range githubDynamic {
			resetRequestResponse(req, w, route.method, route.path)
			router.ServeHTTP(w, req)
		}
	}
}

// Test for params parsing
func TestGitHubParams(t *testing.T) {
	router, err := createRouter(githubDynamic, paramsHandler)
	require.Nil(t, err, "can not create router: %v", err)

	req, w := createRequestResponse()
	for _, route := range githubDynamic {
		resetRequestResponse(req, w, route.method, route.path)
		router.ServeHTTP(w, req)
	}
}
