package yac

import (
	"net/http"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

var githubDynamic = []route{
	// OAuth Authorizations
	{method: "GET", pattern: "/authorizations/{int:id}",
		path: "/authorizations/123", params: `{"id": "123"}`},
	{method: "PATCH", pattern: "/authorizations/{int:id}",
		path: "/authorizations/123", params: `{"id": "123"}`},
	{method: "DELETE", pattern: "/authorizations/{int:id}",
		path: "/authorizations/123", params: `{"id": "123"}`},

	{method: "PUT", pattern: "/authorizations/clients/{int:client_id}",
		path: "/authorizations/clients/123", params: `{"client_id": "123"}`},
	{method: "DELETE", pattern: "/applications/{int:client_id}/tokens",
		path: "/applications/123/tokens", params: `{"client_id": "123"}`},

	{method: "GET", pattern: "/applications/{int:client_id}/tokens/{str:access_token}",
		path: "/applications/123/tokens/test", params: `{"client_id": "123", "access_token": "test"}`},
	{method: "DELETE", pattern: "/applications/{int:client_id}/tokens/{str:access_token}",
		path: "/applications/123/tokens/test", params: `{"client_id": "123", "access_token": "test"}`},

	// Activity
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/events",
		path: "/repos/test/test/events", params: `{"owner": "test", "repo": "test"}`},
	{method: "GET", pattern: "/networks/{str:owner}/{str:repo}/events",
		path: "/networks/test/test/events", params: `{"owner": "test", "repo": "test"}`},
	{method: "GET", pattern: "/orgs/{str:org}/events",
		path: "/orgs/test/events", params: `{"org": "test"}`},
	{method: "GET", pattern: "/users/{str:user}/received_events",
		path: "/users/test/received_events", params: `{"user": "test"}`},
	{method: "GET", pattern: "/users/{str:user}/received_events/public",
		path: "/users/test/received_events/public", params: `{"user": "test"}`},
	{method: "GET", pattern: "/users/{str:user}/events",
		path: "/users/test/events", params: `{"user": "test"}`},
	{method: "GET", pattern: "/users/{str:user}/events/public",
		path: "/users/test/events/public", params: `{"user": "test"}`},
	{method: "GET", pattern: "/users/{str:user}/events/orgs/{str:org}",
		path: "/users/test/events/orgs/test", params: `{"user": "test", "org": "test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/notifications",
		path: "/repos/test/test/notifications", params: `{"owner": "test", "repo": "test"}`},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:repo}/notifications",
		path: "/repos/test/test/notifications", params: `{"owner": "test", "repo": "test"}`},
	{method: "GET", pattern: "/notifications/threads/{int:id}",
		path: "/notifications/threads/123", params: `{"id": "123"}`},
	{method: "PATCH", pattern: "/notifications/threads/{int:id}",
		path: "/notifications/threads/123", params: `{"id": "123"}`},
	{method: "GET", pattern: "/notifications/threads/{int:id}/subscription",
		path: "/notifications/threads/123/subscription", params: `{"id": "123"}`},
	{method: "PUT", pattern: "/notifications/threads/{int:id}/subscription",
		path: "/notifications/threads/123/subscription", params: `{"id": "123"}`},
	{method: "DELETE", pattern: "/notifications/threads/{int:id}/subscription",
		path: "/notifications/threads/123/subscription", params: `{"id": "123"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/stargazers",
		path: "/repos/test/test/stargazers", params: `{"owner": "test", "repo": "test"}`},
	{method: "GET", pattern: "/users/{str:user}/starred",
		path: "/users/test/starred", params: `{"user": "test"}`},
	{method: "GET", pattern: "/user/starred/{str:owner}/{str:repo}",
		path: "/user/starred/test/test", params: `{"owner": "test", "repo": "test"}`},
	{method: "PUT", pattern: "/user/starred/{str:owner}/{str:repo}",
		path: "/user/starred/test/test", params: `{"owner": "test", "repo": "test"}`},
	{method: "DELETE", pattern: "/user/starred/{str:owner}/{str:repo}",
		path: "/user/starred/test/test", params: `{"owner": "test", "repo": "test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/subscribers",
		path: "/repos/test/test/subscribers", params: `{"owner": "test", "repo": "test"}`},
	{method: "GET", pattern: "/users/{str:user}/subscriptions",
		path: "/users/test/subscriptions", params: `{"user": "test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/subscription",
		path: "/repos/test/test/subscription", params: `{"owner": "test", "repo": "test"}`},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:repo}/subscription",
		path: "/repos/test/test/subscription", params: `{"owner": "test", "repo": "test"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/subscription",
		path: "/repos/test/test/subscription", params: `{"owner": "test", "repo": "test"}`},
	{method: "GET", pattern: "/user/subscriptions/{str:owner}/{str:repo}",
		path: "/user/subscriptions/test/test", params: `{"owner": "test", "repo": "test"}`},
	{method: "PUT", pattern: "/user/subscriptions/{str:owner}/{str:repo}",
		path: "/user/subscriptions/test/test", params: `{"owner": "test", "repo": "test"}`},
	{method: "DELETE", pattern: "/user/subscriptions/{str:owner}/{str:repo}",
		path: "/user/subscriptions/test/test", params: `{"owner": "test", "repo": "test"}`},

	// Gists
	{method: "GET", pattern: "/users/{str:user}/gists",
		path: "/users/test/gists", params: `{"user": "test"}`},
	{method: "GET", pattern: "/gists/{int:id}",
		path: "/gists/123", params: `{"id": "123"}`},
	{method: "PATCH", pattern: "/gists/{int:id}",
		path: "/gists/123", params: `{"id": "123"}`},
	{method: "PUT", pattern: "/gists/{int:id}/star",
		path: "/gists/123/star", params: `{"id": "123"}`},
	{method: "DELETE", pattern: "/gists/{int:id}/star",
		path: "/gists/123/star", params: `{"id": "123"}`},
	{method: "GET", pattern: "/gists/{int:id}/star",
		path: "/gists/123/star", params: `{"id": "123"}`},
	{method: "POST", pattern: "/gists/{int:id}/forks",
		path: "/gists/123/forks", params: `{"id": "123"}`},
	{method: "DELETE", pattern: "/gists/{int:id}",
		path: "/gists/123", params: `{"id": "123"}`},

	// Issues
	{method: "GET", pattern: "/orgs/{str:org}/issues",
		path: "/orgs/test/issues", params: `{"org":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/issues",
		path: "/repos/test/test/issues", params: `{"owner": "test", "repo": "test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/issues/{str:user}",
		path: "/repos/test/test/issues/test", params: `{"owner": "test", "repo": "test","user":"test"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/issues",
		path: "/repos/test/test/issues", params: `{"owner": "test", "repo": "test"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}/issues/{str:user}",
		path: "/repos/test/test/issues/test", params: `{"owner": "test", "repo": "test", "user": "test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/assignees",
		path: "/repos/test/test/assignees", params: `{"owner": "test", "repo": "test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/assignees/{str:assignee}",
		path: "/repos/test/test/assignees/test", params: `{"owner": "test", "repo": "test", "assignee": "test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/issues/{str:user}/comments",
		path: "/repos/test/test/issues/test/comments", params: `{"owner": "test","repo": "test","user":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/issues/comments",
		path: "/repos/test/test/issues/comments", params: `{"owner": "test", "repo": "test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/issues/comments/{int:id}",
		path: "/repos/test/test/issues/comments/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/issues/{str:user}/comments",
		path: "/repos/test/test/issues/test/comments", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}/issues/comments/{int:id}",
		path: "/repos/test/test/issues/comments/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/issues/comments/{int:id}",
		path: "/repos/test/test/issues/comments/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/issues/{str:user}/events",
		path: "/repos/test/test/issues/test/events", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/issues/events",
		path: "/repos/test/test/issues/events", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/issues/events/{int:id}",
		path: "/repos/test/test/issues/events/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/labels",
		path: "/repos/test/test/labels", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/labels/{str:name}",
		path: "/repos/test/test/labels/test", params: `{"owner":"test","repo":"test","name":"test"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/labels",
		path: "/repos/test/test/labels", params: `{"owner":"test","repo":"test"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}/labels/{str:name}",
		path: "/repos/test/test/labels/test", params: `{"owner":"test","repo":"test","name":"test"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/labels/{str:name}",
		path: "/repos/test/test/labels/test", params: `{"owner":"test","repo":"test","name":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/issues/{str:user}/labels",
		path: "/repos/test/test/issues/test/labels", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/issues/{str:user}/labels",
		path: "/repos/test/test/issues/test/labels", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/issues/{str:user}/labels/{str:name}",
		path:   "/repos/test/test/issues/test/labels/test",
		params: `{"owner":"test","repo":"test","name":"test","user":"test"}`},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:repo}/issues/{str:user}/labels",
		path: "/repos/test/test/issues/test/labels", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/issues/{str:user}/labels",
		path: "/repos/test/test/issues/test/labels", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/milestones/{str:user}/labels",
		path: "/repos/test/test/milestones/test/labels", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/milestones",
		path: "/repos/test/test/milestones", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/milestones/{str:user}",
		path: "/repos/test/test/milestones/test", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/milestones",
		path: "/repos/test/test/milestones", params: `{"owner":"test","repo":"test"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}/milestones/{str:user}",
		path: "/repos/test/test/milestones/test", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/milestones/{str:user}",
		path: "/repos/test/test/milestones/test", params: `{"owner":"test","repo":"test","user":"test"}`},

	// Miscellaneous
	{method: "GET", pattern: "/gitignore/templates/{str:name}",
		path: "/gitignore/templates/test", params: `{"name":"test"}`},

	// Organizations
	{method: "GET", pattern: "/users/{str:user}/orgs",
		path: "/users/test/orgs", params: `{"user":"test"}`},
	{method: "GET", pattern: "/orgs/{str:org}",
		path: "/orgs/test", params: `{"org":"test"}`},
	{method: "PATCH", pattern: "/orgs/{str:org}",
		path: "/orgs/test", params: `{"org":"test"}`},
	{method: "GET", pattern: "/orgs/{str:org}/members",
		path: "/orgs/test/members", params: `{"org":"test"}`},
	{method: "GET", pattern: "/orgs/{str:org}/members/{str:user}",
		path: "/orgs/test/members/test", params: `{"org":"test","user":"test"}`},
	{method: "DELETE", pattern: "/orgs/{str:org}/members/{str:user}",
		path: "/orgs/test/members/test", params: `{"org":"test","user":"test"}`},
	{method: "GET", pattern: "/orgs/{str:org}/public_members",
		path: "/orgs/test/public_members", params: `{"org":"test"}`},
	{method: "GET", pattern: "/orgs/{str:org}/public_members/{str:user}",
		path: "/orgs/test/public_members/test", params: `{"org":"test","user":"test"}`},
	{method: "PUT", pattern: "/orgs/{str:org}/public_members/{str:user}",
		path: "/orgs/test/public_members/test", params: `{"org":"test","user":"test"}`},
	{method: "DELETE", pattern: "/orgs/{str:org}/public_members/{str:user}",
		path: "/orgs/test/public_members/test", params: `{"org":"test","user":"test"}`},
	{method: "GET", pattern: "/orgs/{str:org}/teams",
		path: "/orgs/test/teams", params: `{"org":"test"}`},
	{method: "GET", pattern: "/teams/{int:id}",
		path: "/teams/123", params: `{"id":"123"}`},
	{method: "POST", pattern: "/orgs/{str:org}/teams",
		path: "/orgs/test/teams", params: `{"org":"test"}`},
	{method: "PATCH", pattern: "/teams/{int:id}",
		path: "/teams/123", params: `{"id":"123"}`},
	{method: "DELETE", pattern: "/teams/{int:id}",
		path: "/teams/123", params: `{"id":"123"}`},
	{method: "GET", pattern: "/teams/{int:id}/members",
		path: "/teams/123/members", params: `{"id":"123"}`},
	{method: "GET", pattern: "/teams/{int:id}/members/{str:user}",
		path: "/teams/123/members/test", params: `{"id":"123","user":"test"}`},
	{method: "PUT", pattern: "/teams/{int:id}/members/{str:user}",
		path: "/teams/123/members/test", params: `{"id":"123","user":"test"}`},
	{method: "DELETE", pattern: "/teams/{int:id}/members/{str:user}",
		path: "/teams/123/members/test", params: `{"id":"123","user":"test"}`},
	{method: "GET", pattern: "/teams/{int:id}/repos",
		path: "/teams/123/repos", params: `{"id":"123"}`},
	{method: "GET", pattern: "/teams/{int:id}/repos/{str:owner}/{str:repo}",
		path: "/teams/123/repos/test/test", params: `{"id":"123","owner":"test","repo":"test"}`},
	{method: "PUT", pattern: "/teams/{int:id}/repos/{str:owner}/{str:repo}",
		path: "/teams/123/repos/test/test", params: `{"id":"123","owner":"test","repo":"test"}`},
	{method: "DELETE", pattern: "/teams/{int:id}/repos/{str:owner}/{str:repo}",
		path: "/teams/123/repos/test/test", params: `{"id":"123","owner":"test","repo":"test"}`},

	// Pull Requests
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/pulls",
		path: "/repos/test/test/pulls", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/pulls/{str:user}",
		path: "/repos/test/test/pulls/test", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/pulls",
		path: "/repos/test/test/pulls", params: `{"owner":"test","repo":"test"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}/pulls/{str:user}",
		path: "/repos/test/test/pulls/test", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/pulls/{str:user}/commits",
		path: "/repos/test/test/pulls/test/commits", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/pulls/{str:user}/files",
		path: "/repos/test/test/pulls/test/files", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/pulls/{str:user}/merge",
		path: "/repos/test/test/pulls/test/merge", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:repo}/pulls/{str:user}/merge",
		path: "/repos/test/test/pulls/test/merge", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/pulls/{str:user}/comments",
		path: "/repos/test/test/pulls/test/comments", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/pulls/comments",
		path: "/repos/test/test/pulls/comments", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/pulls/comments/{str:user}",
		path: "/repos/test/test/pulls/comments/test", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:repo}/pulls/{str:user}/comments",
		path: "/repos/test/test/pulls/test/comments", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}/pulls/comments/{str:user}",
		path: "/repos/test/test/pulls/comments/test", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/pulls/comments/{str:user}",
		path: "/repos/test/test/pulls/comments/test", params: `{"owner":"test","repo":"test","user":"test"}`},

	// Repositories
	{method: "GET", pattern: "/users/{str:user}/repos",
		path: "/users/test/repos", params: `{"user":"test"}`},
	{method: "GET", pattern: "/orgs/{str:org}/repos",
		path: "/orgs/test/repos", params: `{"org":"test"}`},
	{method: "POST", pattern: "/orgs/{str:org}/repos",
		path: "/orgs/test/repos", params: `{"org":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}",
		path: "/repos/test/test", params: `{"owner":"test","repo":"test"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}",
		path: "/repos/test/test", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/contributors",
		path: "/repos/test/test/contributors", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/languages",
		path: "/repos/test/test/languages", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/teams",
		path: "/repos/test/test/teams", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/tags",
		path: "/repos/test/test/tags", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/branches",
		path: "/repos/test/test/branches", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/branches/{str:branch}",
		path: "/repos/test/test/branches/test", params: `{"owner":"test","repo":"test","branch":"test"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}",
		path: "/repos/test/test", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/collaborators",
		path: "/repos/test/test/collaborators", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/collaborators/{str:user}",
		path: "/repos/test/test/collaborators/test", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:repo}/collaborators/{str:user}",
		path: "/repos/test/test/collaborators/test", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/collaborators/{str:user}",
		path: "/repos/test/test/collaborators/test", params: `{"owner":"test","repo":"test","user":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/comments",
		path: "/repos/test/test/comments", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/commits/{hex:sha}/comments",
		path:   "/repos/test/test/commits/dead12beef/comments",
		params: `{"owner":"test","repo":"test","sha":"dead12beef"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/commits/{hex:sha}/comments",
		path:   "/repos/test/test/commits/dead12beef/comments",
		params: `{"owner":"test","repo":"test","sha":"dead12beef"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/comments/{int:id}",
		path: "/repos/test/test/comments/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}/comments/{int:id}",
		path: "/repos/test/test/comments/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/comments/{int:id}",
		path: "/repos/test/test/comments/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/commits",
		path: "/repos/test/test/commits", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/commits/{hex:sha}",
		path:   "/repos/test/test/commits/dead12beef",
		params: `{"owner":"test","repo":"test","sha":"dead12beef"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/readme",
		path: "/repos/test/test/readme", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/contents/{str:path}",
		path: "/repos/test/test/contents/pasdasd", params: `{"owner":"test","repo":"test","path":"pasdasd"}`},
	{method: "PUT", pattern: "/repos/{str:owner}/{str:repo}/contents/{str:path}",
		path: "/repos/test/test/contents/pathdas", params: `{"owner":"test","repo":"test","path":"pathdas"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/contents/{str:path}",
		path: "/repos/test/test/contents/pathsda", params: `{"owner":"test","repo":"test","path":"pathsda"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/{str:archive_format}/{str:ref}",
		path:   "/repos/test/test/test/test",
		params: `{"owner":"test","repo":"test","archive_format":"test","ref":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/keys",
		path: "/repos/test/test/keys", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/keys/{int:id}",
		path: "/repos/test/test/keys/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/keys",
		path: "/repos/test/test/keys", params: `{"owner":"test","repo":"test"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}/keys/{int:id}",
		path: "/repos/test/test/keys/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/keys/{int:id}",
		path: "/repos/test/test/keys/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/downloads",
		path: "/repos/test/test/downloads", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/downloads/{int:id}",
		path: "/repos/test/test/downloads/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/downloads/{int:id}",
		path: "/repos/test/test/downloads/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/forks",
		path: "/repos/test/test/forks", params: `{"owner":"test","repo":"test"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/forks",
		path: "/repos/test/test/forks", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/hooks",
		path: "/repos/test/test/hooks", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/hooks/{int:id}",
		path: "/repos/test/test/hooks/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/hooks",
		path: "/repos/test/test/hooks", params: `{"owner":"test","repo":"test"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}/hooks/{int:id}",
		path: "/repos/test/test/hooks/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/hooks/{int:id}/tests",
		path: "/repos/test/test/hooks/123/tests", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/hooks/{int:id}",
		path: "/repos/test/test/hooks/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/merges",
		path: "/repos/test/test/merges", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/releases",
		path: "/repos/test/test/releases", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/releases/{int:id}",
		path: "/repos/test/test/releases/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/releases",
		path: "/repos/test/test/releases", params: `{"owner":"test","repo":"test"}`},
	{method: "PATCH", pattern: "/repos/{str:owner}/{str:repo}/releases/{int:id}",
		path: "/repos/test/test/releases/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "DELETE", pattern: "/repos/{str:owner}/{str:repo}/releases/{int:id}",
		path: "/repos/test/test/releases/123", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/releases/{int:id}/assets",
		path: "/repos/test/test/releases/123/assets", params: `{"owner":"test","repo":"test","id":"123"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/stats/contributors",
		path: "/repos/test/test/stats/contributors", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/stats/commit_activity",
		path: "/repos/test/test/stats/commit_activity", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/stats/code_frequency",
		path: "/repos/test/test/stats/code_frequency", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/stats/participation",
		path: "/repos/test/test/stats/participation", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/stats/punch_card",
		path: "/repos/test/test/stats/punch_card", params: `{"owner":"test","repo":"test"}`},
	{method: "GET", pattern: "/repos/{str:owner}/{str:repo}/statuses/{str:ref}",
		path: "/repos/test/test/statuses/test", params: `{"owner":"test","repo":"test","ref":"test"}`},
	{method: "POST", pattern: "/repos/{str:owner}/{str:repo}/statuses/{str:ref}",
		path: "/repos/test/test/statuses/test", params: `{"owner":"test","repo":"test","ref":"test"}`},
}

// Tests that all dynamic API routes resolves correctly
func TestGitHubDynamic(t *testing.T) {
	router, err := createRouter(githubDynamic, emptyHandler)
	require.Nil(t, err, "can not create router: %v", err)

	req, w := createRequestResponse()

	for _, route := range githubDynamic {
		resetRequestResponse(req, w, route.method, route.path)
		router.ServeHTTP(w, req)
		assert.Equal(t, http.StatusOK, w.Code, "can not resolve route %+v", route)
	}
}

// Bench for dynamic API resolving
func BenchmarkGithubDynamic(b *testing.B) {
	router, err := createRouter(githubDynamic, emptyHandler)
	require.Nil(b, err, "can not create router: %v", err)

	req, w := createRequestResponse()

	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		for _, route := range githubDynamic {
			resetRequestResponse(req, w, route.method, route.path)
			router.ServeHTTP(w, req)
		}
	}
}

// Test for params parsing
func TestGitHubParams(t *testing.T) {
	router, err := createRouter(githubDynamic, paramsHandler)
	require.Nil(t, err, "can not create router: %v", err)

	req, w := createRequestResponse()
	for _, route := range githubDynamic {
		resetRequestResponse(req, w, route.method, route.path)
		router.ServeHTTP(w, req)
		assert.JSONEq(t, route.params, w.Body.String(), "invalid params for '%+v'", route)
	}
}
